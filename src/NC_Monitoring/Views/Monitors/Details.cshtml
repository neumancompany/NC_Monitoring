@model MonitorDetailDTO

@{
    ViewData["Title"] = Model.Name;
}

<h1>@ViewData["Title"]</h1>

<table class="table table-bordered">
    <tr>
        <th>Scenario</th>
        <td><a asp-controller="Scenarios" asp-action="Details" asp-route-id="@Model.ScenarioId">@Model.ScenarioName</a></td>
    </tr>
    <tr>
        <th>Status</th>
        <td>@Model.StatusName</td>
    </tr>
    <tr>
        <th>Method</th>
        <td>@Model.MethodTypeName</td>
    </tr>
    <tr>
        <th>Url</th>
        <td><a href="@Model.Url" target="_blank">@Model.Url</a></td>
    </tr>
    <tr>
        <th>Verification type</th>
        <td>@Model.VerificationTypeName</td>
    </tr>
    <tr>
        <th>Verification value</th>
        <td>@Model.VerificationValue</td>
    </tr>
    <tr>
        <th>Timeout</th>
        <td>@Model.Timeout</td>
    </tr>
</table>

<h2>Records</h2>

@if(User.IsAllowDeleting())
{
<div class="text-right">
    @(Html.DevExtreme().Button().Text("Clear old records.").OnClick("clearOldRecords"))
    @(Html.DevExtreme().Button().Text("Clear all records.").OnClick("clearRecords"))
</div>
}

@(Html.DevExtreme().DataGrid<MonitorRecordViewModel>()
        .ID("grdRecords")
            .Editing(e => e.AllowAdding(false).AllowDeleting(false).AllowUpdating(false))
            .DataSource(ds => ds.Mvc()
                .Controller<MonitorsController>()
                .RouteName("RecordsForMonitorLoad")
                .LoadParams(new
                {
                    monitorId = Model.Id,
                })
                .Key("Id")
            )
            .Columns(columns =>
            {
                columns.AddFor(m => m.StartDate)
                    .DataType(GridColumnDataType.DateTime);

                columns.AddFor(m => m.EndDate)
                    .DataType(GridColumnDataType.DateTime);

                columns.AddFor(m => m.Note);

                columns.AddFor(m => m.GroupBy)
                    .SortOrder(SortOrder.Desc)
                    .GroupIndex(0);
            })
            //.SortByGroupSummaryInfo(i => i.Add().SummaryItem("blbo"))
            .Summary(s => s.GroupItems(items =>
            {
                items.AddFor(m => m.Note)
                    .SummaryType(SummaryType.Count)
                    //.CustomizeText("Muj text")
                    .DisplayFormat("{0} orders")
                    .ValueFormat(Format.ShortDate)
                    .Column(x => x.GroupBy);
            }))
)

<script>
    function clearRecords() {
        $.ajax({
            url: '/api/records/clear/@Model.Id',
            method: 'delete',
        }).done(function () {
            $('#grdRecords').dxDataGrid('instance').refresh();
        });
    }
    function clearOldRecords() {
        $.ajax({
            url: '/api/records/clear/old/@Model.Id',
            method: 'delete',
        }).done(function () {
            $('#grdRecords').dxDataGrid('instance').refresh();
        });
    }
</script>